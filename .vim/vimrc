""" Vundle
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#rc()
" Plugins
Plugin 'gmarik/Vundle.vim'
Plugin 'dhruvasagar/vim-table-mode'
Plugin 'easymotion/vim-easymotion'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/syntastic'
Plugin 'Valloric/YouCompleteMe'
Plugin 'junegunn/fzf'
Plugin 'junegunn/fzf.vim'
Plugin 'tpope/vim-abolish'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-unimpaired'
Plugin 'airblade/vim-gitgutter'
Plugin 'int3/vim-extradite'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'chaoren/vim-wordmotion'
Plugin 'mbbill/undotree'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'jeffkreeftmeijer/vim-numbertoggle'

" Language specific plugins
Plugin 'pangloss/vim-javascript'
Plugin 'othree/html5.vim'
Plugin 'othree/javascript-libraries-syntax.vim'
Plugin 'mxw/vim-jsx'
Plugin 'hail2u/vim-css3-syntax'
Plugin 'cakebaker/scss-syntax.vim'
Plugin 'gcorne/vim-sass-lint'
Plugin 'rust-lang/rust.vim'

runtime macros/matchit.vim

""" Settings
filetype plugin indent on
syntax enable

set updatetime=250
set ttimeoutlen=0

colorscheme desert
set t_Co=256
set bg=dark

set autoindent
set smartindent
set expandtab
set tabstop=2
set shiftwidth=0
set softtabstop=-1

set number
set mouse=a
set incsearch
set ignorecase
set smartcase
set hlsearch

set nostartofline
set nojoinspaces
set modeline
set wrap
set linebreak
set nrformats=octal,hex,alpha

set hidden
set tabpagemax=100
set scrolloff=3
set statusline=%<%F%(\ %h%m%r%w%)\ [%Y\ %{&ff}]%=%b\ 0x%B\ \ %-17.(%l/%L,%c%V%)%P\ %<
set rulerformat=%20(%-17.(%M%l/%L,%c%V%)%P%)%<
set showcmd
set wildmenu

set list
set listchars=tab:>-,trail:~,extends:>,precedes:<,nbsp:+
set breakindent
set showbreak=>>
set breakindentopt=sbr,shift:2

" Use bg=dark when using vimdiff
if &diff
    set bg=dark
endif

" Set noexpandtab when file uses tabs for indents
function Kees_settabs()
    if len(filter(getbufline(winbufnr(0), 1, 1000), 'v:val =~ "\\t"')) > len(filter(getbufline(winbufnr(0), 1, 1000), 'v:val =~ "    "'))
        setlocal noet
    endif
endfunction
autocmd BufReadPost * call Kees_settabs()

" Makefile sanity - always use tabs in makefiles and debian/rules
autocmd BufEnter Makefile* setlocal noet
autocmd BufEnter */debian/rules setlocal noet

""" Key bindings

imap jk <Esc>
imap jj <Esc>

" Copy and paste
set pastetoggle=<F10>
vmap <C-c> "+y
map <expr> <C-v> (match(@+, "\n") != -1 ? '"+p' : '"+P')
imap <expr> <C-v> (col('.')-1 == strlen(getline('.')) ? '<C-o>"+p' : '<C-o><C-v>')

" Quit and write
nmap <C-s> :w<CR>
vmap <C-s> <Esc><C-s>
imap <C-s> <C-o><C-s>
cnoreabbrev Q q
cnoreabbrev W w

" Remove search highlights and numbers
nnoremap <silent> <C-l> :nohlsearch<CR><C-l>
inoremap <silent> <C-l> <C-o>:nohlsearch<CR><C-o><C-l>
map  <silent> <F11> :set relativenumber!<CR>
map! <silent> <F11> <C-o>:set relativenumber!<CR>
map  <silent> <F12> :set number!<CR>
map! <silent> <F12> <C-o>:set number!<CR>

" Change files with tab and shift+tab. New tab with alt+t
nmap  <Esc>t :tabnew<CR>
map  <Tab> :next<CR>
map  <S-Tab> :previous<CR>

" Indent and unindent lines with tab and shift+tab
vmap <silent> <Tab> >gvllllollllo
vmap <silent> <S-Tab> <gvhhhhohhhho
inoremap <S-Tab> <C-d>

" Smart home and end
map  <expr> <Home> (match(getline('.'), '^\s*$') != -1 ? '0' : col('.') == matchend(getline('.'), '^\s*')+1 ? '0'  : '^')
imap        <Home> <C-o><Home>
nmap <expr> <End>  (match(getline('.'), '^\s*$') != -1 ? '$' : col('.') == strlen(getline('.'))             ? 'g_' : '$')
vmap <expr> <End>  (match(getline('.'), '^\s*$') != -1 ? '$' : col('.') == strlen(getline('.'))             ? 'g_' : '$h')
imap        <End>  <C-o><End>

""" Plugin settings

" fzf
let g:fzf_history_dir = '~/.local/share/fzf-history'
nmap <C-p> :Files<CR>
nmap <Esc><C-p> :Ag<CR>
nmap <Esc>p :Buffers<CR>
nmap <Esc>P :History<CR>
nmap ,a :Ag 

" NERDCommenter
map <Esc>c <Leader>c<Space>
" Let NERDCommenter see the commentstring
filetype plugin on
" Use // for comments in C and C++
let g:NERDAltDelims_c = 1
let g:NERDAltDelims_python = 1
let NERDSpaceDelims=1
